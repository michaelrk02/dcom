// This file is automatically generated using DCOM IDL
// Please do not edit by hand

package component

import (
	uuid "github.com/google/uuid"
	dcom "github.com/michaelrk02/dcom"
)

var CLSIDEmployee = uuid.MustParse("65d6ec66-ef74-4a08-ab45-515845cf3f03")

type Employee interface {
	dcom.Object

	GetName() (string, error)
	SetName(name string) error
	GetSalary() (float64, error)
	SetSalary(salary float64) error
	GetTenure() (int, error)
	SetTenure(tenure int) error
	GetMarried() (bool, error)
	SetMarried(married bool) error
}

func EmployeeToObject(v Employee) dcom.Object {
	return v.(dcom.Object)
}

func EmployeeToObjectOptional(v Employee) dcom.Object {
	if v == nil {
		return nil
	}
	return v.(dcom.Object)
}

func EmployeeToObjectArray(v []Employee) []dcom.Object {
	arr := make([]dcom.Object, len(v))
	for i := range v {
		arr[i] = EmployeeToObject(v[i])
	}
	return arr
}

func ObjectToEmployee(v dcom.Object) Employee {
	return v.(Employee)
}

func ObjectToEmployeeOptional(v dcom.Object) Employee {
	if v == nil {
		return nil
	}
	return v.(Employee)
}

func ObjectToEmployeeArray(v []dcom.Object) []Employee {
	arr := make([]Employee, len(v))
	for i := range v {
		arr[i] = ObjectToEmployee(v[i])
	}
	return arr
}
